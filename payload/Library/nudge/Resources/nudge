#!/Library/nudge/Python.framework/Versions/3.8/bin/python3
# -*- coding: utf-8 -*-

'''nudge - python wrapper for major OS updates.'''

from Foundation import NSRunLoop, NSRunLoopCommonModes

from nudgelib.helpers import (nudge_already_loaded,
                              not_in_userland,
                              start_info,
                              random_delay,
                              threshold_by_version)
from nudgelib.config import (get_config_type,
                             Config)
from nudgelib.builder import Builder
from nudgelib.nudgelogic import NudgeLogic
from nudgelib.ux import UX


def main():
    '''Main thread'''
    if nudge_already_loaded():
        exit(0)

    if not_in_userland():
        exit(0)

    config_type, sidecar = get_config_type()
    nudge_config = Config(config_type, sidecar)
    nudge_prefs = nudge_config.get_config()

    nudge_prefs['update_minor'] = start_info(nudge_prefs['minimum_os_version'],
                                             nudge_prefs['update_minor'],
                                             nudge_prefs['minimum_os_sub_build_version'],
                                             nudge_prefs['dismissal_count_threshold'])

    random_delay(nudge_prefs['random_delay'])

    threshold_by_version(nudge_prefs['minimum_os_sub_build_version'],
                         nudge_prefs['minimum_os_version'],
                         nudge_prefs['minimum_os_version_major'],
                         nudge_prefs['update_minor'])

    logic = NudgeLogic(nudge_prefs)
    nudge_prefs = logic.start()

    nibbler = Builder(nudge_prefs['path_to_app'], nudge_prefs['more_info_url'])

    ux = UX(nibbler, nudge_prefs)
    ux.build()
    ux.run()


if __name__ == '__main__':
    main()
